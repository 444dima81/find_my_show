from qdrant_client import QdrantClient
from qdrant_client.models import PointStruct,VectorParams, Distance
import math

# 1Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –æ–±–ª–∞—á–Ω–æ–º—É Qdrant
cloud_client = QdrantClient(
    url="https://3332fb57-c252-45fc-9af4-d01551ed3889.eu-central-1-0.aws.cloud.qdrant.io:6333", 
    api_key="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3MiOiJtIn0.qEJ2rYHHI-rLFsI809yjzC3QLqyPPVfln99gzokKJOg",
)

# 2Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ
local_client = QdrantClient(path="../data/qdrant_db_backup/db/qdrant_db")  # –ø—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î

print("üìÅ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ:")
print(local_client.get_collections())

# 3Ô∏è‚É£ –°—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ—á–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
points, _ = local_client.scroll(
    collection_name="demo_collection",
    with_payload=True,
    with_vectors=True,
    limit=100000  
)

print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ—á–µ–∫ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: {len(points)}")

# 4Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –≤ –æ–±–ª–∞–∫–µ (–µ—Å–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞)
cloud_client.recreate_collection(
    collection_name="demo_collection",
    vectors_config=VectorParams(size=768, distance=Distance.COSINE)
)
print("‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è –≤ –æ–±–ª–∞–∫–µ –≥–æ—Ç–æ–≤–∞!")

# 5Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–∞—Ç—á–∞–º–∏
BATCH_SIZE = 500
for i in range(0, len(points), BATCH_SIZE):
    batch = points[i:i+BATCH_SIZE]
    cloud_client.upsert(
        collection_name="demo_collection",
        points=[
            PointStruct(
                id=p.id,
                vector=p.vector,
                payload=p.payload
            )
            for p in batch
        ]
    )
    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–∞—Ç—á {i//BATCH_SIZE + 1}/{math.ceil(len(points) / BATCH_SIZE)} ({len(batch)} —Ç–æ—á–µ–∫)")

# 6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ –æ–±–ª–∞—á–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
count = cloud_client.count(collection_name="demo_collection").count
print(f"üåê –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ –æ–±–ª–∞—á–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {count}")